{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@parcel/runtime-js/lib/runtime-d95a89ab86857bf5.js","node_modules/@parcel/runtime-js/lib/runtime-8abb31ad7f365222.js","src/js/dino.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|(chrome|moz)-extension):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|(chrome|moz)-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp|(chrome|moz)-extension):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"7Gfrt\\\":\\\"index.559333a3.js\\\",\\\"63WLt\\\":\\\"cactus.bb421734.png\\\"}\"));","module.exports = require('./helpers/bundle-url').getBundleURL('7Gfrt') + require('./helpers/bundle-manifest').resolve(\"63WLt\");","const dino = () => {\r\n  let speed = 3;\r\n  let score;\r\n  let animationFrameId = null;\r\n\r\n  const stageDOM = document.querySelector('.dino__stage');\r\n  const sprites = {\r\n    dino: {\r\n      isJumping: false,\r\n      isTouchingCactus: false,\r\n      dom: document.querySelector('.dino__dino'),\r\n    },\r\n    ground: {\r\n      width: 481,\r\n      offsets: [],\r\n      dom: Array.from(document.querySelectorAll('.dino__ground *')),\r\n    },\r\n    cactuses: {\r\n      dom: document.querySelector('.dino__cactuses'),\r\n      width: 33,\r\n      clones: [],\r\n    },\r\n  };\r\n\r\n  sprites.ground.dom.forEach((domElement, index) => {\r\n    domElement.style.left = index === 0 ? sprites.ground.width + 'px' : '0px';\r\n    sprites.ground.offsets.push(parseFloat(domElement.style.left));\r\n  });\r\n\r\n  const handleJump = e => {\r\n    const isJumpKey = e.code === 'Space' || e.code === 'ArrowUp';\r\n    const { dino } = sprites;\r\n\r\n    if (\r\n      ((e.type === 'keydown' && isJumpKey) || e.type === 'mousedown') &&\r\n      !dino.isJumping\r\n    ) {\r\n      const {\r\n        dom: { style },\r\n      } = dino;\r\n\r\n      e.preventDefault();\r\n\r\n      dino.isJumping = true;\r\n      style.bottom = '80%';\r\n\r\n      setTimeout(() => {\r\n        style.bottom = '';\r\n\r\n        stageDOM.addEventListener(\r\n          'transitionend',\r\n          () => (dino.isJumping = false)\r\n        );\r\n      }, 400); // Duration of the jump\r\n    }\r\n  };\r\n\r\n  stageDOM.addEventListener('focus', () => {\r\n    stageDOM.addEventListener('keydown', handleJump);\r\n    stageDOM.addEventListener('mousedown', handleJump);\r\n    stageDOM.classList.add('dino__stage-focus');\r\n  });\r\n\r\n  stageDOM.addEventListener('blur', () => {\r\n    stageDOM.removeEventListener('keydown', handleJump);\r\n    stageDOM.removeEventListener('mousedown', handleJump);\r\n    stageDOM.classList.remove('dino__stage-focus');\r\n  });\r\n\r\n  const checkCollision = () => {\r\n    const { dino, cactuses } = sprites;\r\n\r\n    const dinoRect = dino.dom.getBoundingClientRect();\r\n\r\n    for (const cactus of cactuses.clones) {\r\n      const cactusRect = cactus.dom.getBoundingClientRect();\r\n\r\n      if (\r\n        !(\r\n          dinoRect.bottom < cactusRect.top ||\r\n          dinoRect.top > cactusRect.bottom ||\r\n          dinoRect.right < cactusRect.left ||\r\n          dinoRect.left > cactusRect.right\r\n        )\r\n      ) {\r\n        sprites.dino.isTouchingCactus = true;\r\n        return true; // Колізія знайдена\r\n      }\r\n    }\r\n\r\n    sprites.dino.isTouchingCactus = false;\r\n    return false; // Колізія не знайдена\r\n  };\r\n\r\n  const animateWorld = function () {\r\n    const { ground, cactuses } = sprites;\r\n\r\n    const startMove = () => {\r\n      ground.offsets = ground.offsets.map(offset => offset - speed);\r\n\r\n      ground.dom.forEach((domElement, index) => {\r\n        const offset = ground.offsets[index];\r\n        domElement.style.left = `${offset}px`;\r\n\r\n        if (offset <= -ground.width) {\r\n          ground.offsets[index] = ground.width * (ground.dom.length - 1);\r\n        }\r\n      });\r\n\r\n      cactuses.clones.forEach((clone, index) => {\r\n        clone.offset -= speed;\r\n        clone.dom.style.left = `${clone.offset}px`;\r\n\r\n        if (clone.offset <= -cactuses.width) {\r\n          cactuses.dom.removeChild(clone.dom);\r\n          cactuses.clones.splice(index, 1);\r\n        }\r\n      });\r\n\r\n      if (\r\n        cactuses.clones.length === 0 ||\r\n        cactuses.clones[cactuses.clones.length - 1].offset <\r\n          ground.width - (Math.floor(Math.random() * 300) + 150)\r\n      ) {\r\n        let newCactus = document.createElement('img');\r\n        newCactus.src = new URL('../images/cactus.png', import.meta.url);\r\n        newCactus.classList.add('dino__sprite', 'dino__onground');\r\n        newCactus.style.width = Math.floor(Math.random() * 15) + 10 + 'px';\r\n        newCactus.alt = 'cactus';\r\n\r\n        cactuses.clones.push({\r\n          id: cactuses.clones.length,\r\n          offset: ground.width + Math.random() * (ground.width / 8),\r\n          dom: newCactus,\r\n        });\r\n\r\n        cactuses.dom.appendChild(newCactus);\r\n      }\r\n\r\n      score++;\r\n      stageDOM.querySelector('.dino__score span').textContent = score;\r\n\r\n      animationFrameId = requestAnimationFrame(startMove);\r\n\r\n      if (checkCollision()) {\r\n        stageDOM.querySelector('.dino__end').style.display = '';\r\n        stopAnimation();\r\n      }\r\n    };\r\n\r\n    startMove();\r\n  };\r\n\r\n  const stopAnimation = () => {\r\n    if (animationFrameId) {\r\n      cancelAnimationFrame(animationFrameId);\r\n      animationFrameId = null;\r\n\r\n      stageDOM.removeEventListener('keydown', handleJump);\r\n      stageDOM.removeEventListener('mousedown', handleJump);\r\n    }\r\n  };\r\n\r\n  const startGame = () => {\r\n    stopAnimation();\r\n\r\n    stageDOM.querySelector('.dino__play').style.display = 'none';\r\n    stageDOM.querySelector('.dino__end').style.display = 'none';\r\n\r\n    sprites.dino.isJumping = false;\r\n    sprites.dino.isTouchingCactus = false;\r\n\r\n    document.querySelector('.dino__cactuses').textContent = '';\r\n    sprites.cactuses.clones = [];\r\n\r\n    score = 0;\r\n\r\n    sprites.ground.dom.forEach((domElement, index) => {\r\n      domElement.style.left = index === 0 ? sprites.ground.width + 'px' : '0px';\r\n      sprites.ground.offsets[index] = parseFloat(domElement.style.left);\r\n    });\r\n\r\n    stageDOM.setAttribute('tabindex', '0');\r\n    stageDOM.focus();\r\n\r\n    animateWorld();\r\n  };\r\n\r\n  window.addEventListener('beforeunload', stopAnimation);\r\n\r\n  stageDOM\r\n    .querySelector('.dino__play .btn')\r\n    .addEventListener('click', startGame);\r\n  stageDOM\r\n    .querySelector('.dino__end .btn')\r\n    .addEventListener('click', startGame);\r\n\r\n  // Сховуємо екран завершення гри при завантаженні\r\n  stageDOM.querySelector('.dino__end').style.display = 'none';\r\n};\r\n\r\ndino();\r\n"],"names":["$0380ce8f1f064ccc$export$6503ec6e8aabbaf","$0380ce8f1f064ccc$export$f7ad0328861e2f03","$0380ce8f1f064ccc$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","$7dd1ddf6834435ca$export$bdfd709ae4826697","$7dd1ddf6834435ca$var$bundleURL","$7dd1ddf6834435ca$var$getBaseURL","url","replace","value","err","matches","stack","match","$7dd1ddf6834435ca$var$getBundleURL","parcelRequire","register","JSON","parse","$7e7d9071818bc1c1$exports","getBundleURL","resolve","score","animationFrameId","stageDOM","document","querySelector","sprites","dino","isJumping","isTouchingCactus","dom","ground","width","offsets","Array","from","querySelectorAll","cactuses","clones","forEach","domElement","index","style","left","push","parseFloat","handleJump","e","isJumpKey","code","dino1","type","preventDefault","bottom","setTimeout","addEventListener","classList","add","removeEventListener","remove","animateWorld","startMove","map","offset","concat","clone","removeChild","splice","Math","floor","random","newCactus","createElement","src","URL","alt","appendChild","textContent","requestAnimationFrame","dino2","dinoRect","getBoundingClientRect","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","cactusRect","top","right","return","checkCollision","display","stopAnimation","cancelAnimationFrame","startGame","setAttribute","focus","window","$02ba40e528f13d41$var$dino"],"version":3,"file":"index.559333a3.js.map"}